services:
  postgres:
    image: postgres:13
    container_name: betmaker_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  bet-maker:
    build:
      context: ./bet_maker
    container_name: betmaker_service
    environment:
      PYTHONPATH: /app
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      APP_HOST: 0.0.0.0
      APP_PORT: 8000
    working_dir: /app
    volumes:
      - ./bet_maker:/app
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy

  line-provider:
    build:
      context: ./line_provider
    container_name: lineprovider_service
    environment:
      PYTHONPATH: /app
      APP_HOST: 0.0.0.0
      APP_PORT: 8001
    working_dir: /app
    volumes:
      - ./line_provider:/app
    ports:
      - "8001:8001"
    depends_on:
      postgres:
        condition: service_healthy

  tests:
    build:
      context: ./tests
    container_name: test_runner
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      SERVICE_BET_MAKER_URL: http://bet-maker:8000
      SERVICE_LINE_PROVIDER_URL: http://line-provider:8001
    working_dir: /app
    depends_on:
      postgres:
        condition: service_healthy
      bet-maker:
        condition: service_started
      line-provider:
        condition: service_started
    command: ["pytest", "--asyncio-mode=auto", "--disable-warnings", "-v"]
    volumes:
      - ./tests:/app

volumes:
  postgres_data:
